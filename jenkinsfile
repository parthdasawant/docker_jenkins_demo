pipeline{
	agent any
	
	environment {
		// Define environment variables for Git and DockerHub credentials
		GIT_REPOSITORY_URL = 'https://github.com/parthdasawant/docker_jenkins_demo.git'
		DOCKER_IMAGE_NAME = 'parthdasawant/docker_jenkins_demo'
		IMAGE_TAG = '1.0' //String tag
	}

	stages{
		stage('Clone Repository') {
			steps {
				script {
					try {
						git branch: 'main', url: GIT_REPOSITORY_URL
					} catch (Exception e) {
						echo "Failed to clone repo: ${e.message}"
						error "Failed to clone repo"
					}
				}	
			}
		}
		stage('Build Docker Image') {
			steps {
				script {
					try {
						docker.build(DOCKER_IMAGE_NAME)
					} catch(Exception e){
						echo "Failed to build Docker image : ${e.message}"
						error "Failed to build the Docker image"
					}
				}
			}
		}
		stage('Push to Dockerhub'){
			steps{
				script {
					try {
						withCredentials([usernamePassword(credentialsId: 'my-docker-hub-credentialsId', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) { 
							docker.withRegistry('https://index.docker.io/v1/') {
								sh "echo \$DOCKER_PASSWORD | docker login -u \$DOCKER_USERNAME --password-stdin docker.io"
								docker.image(DOCKER_IMAGE_NAME).push(IMAGE_TAG)
							}
						}
					} catch (Exception e) {
						echo "Failed to push Docker image to registry: ${e.message}"
						error "Failed to push Docker image to"
					}
				}
			}
		}
	}
}
